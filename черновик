



/* if (!items.has('An')) {
            items.add(
                'An',
                Dropdown.component(
                    {
                        buttonClassName: 'Button Button--primary tags_center',
                        label: "An",
                        accessibleToggleLabel: "An",
                    },
                    Object.keys(sortOptionsAn).map((value) => {
                        const label = sortOptionsAn[value];
                        const active = (app.search.params().sort || Object.keys(sortMap)[0]) === value;

                        return LinkButton.component(
                            {
                                icon: active ? 'fas fa-check' : true,
                                href: '/t/' + label,
                                active: active,
                            },
                            label
                        );
                    })
                )
            );
        } */






                   /*  
                    id = app.store.all('tags')[i].data.id;
                    sidebarItems.add(
                        app.store.all('tags')[i].data.attributes.name,
                        LinkButton.component(
                            {
                                icon: app.store.all('tags')[i].data.attributes.icon,
                                href: '/t/' + app.store.all('tags')[i].data.attributes.slug,
                                className: 'Button Button--primary tags_left',
                                itemClassName: 'App-primaryControl',
                            },
                            app.store.all('tags')[i].data.attributes.name
                        ),
                    );

                    if (app.store.all('tags')[i].data.relationships) {
                        if (app.store.all('tags')[i].data.relationships.children) {

                            for (let x = 0; x < app.store.all('tags')[i].data.relationships.children.data.length; x++) {

                                let id_tag_children = app.store.all('tags')[i].data.relationships.children.data[x].id;

                                for (let z = 0; z < app.store.all('tags').length; z++) {
                                    if (app.store.all('tags')[z].data.id == id_tag_children) {
                                        sidebarItems.add(
                                            app.store.all('tags')[z].data.attributes.name,
                                            LinkButton.component(
                                                {
                                                    icon: app.store.all('tags')[z].data.attributes.icon,
                                                    href: '/t/' + app.store.all('tags')[z].data.attributes.slug,
                                                    className: 'Button Button--primary tags_left_child',
                                                    itemClassName: 'App-primaryControl',
                                                },
                                                app.store.all('tags')[z].data.attributes.name
                                            ),
                                        );
                                    }
                                }
                            }
                        }
                    } */









                    /* id = app.store.all('tags')[i].data.id;
                    sidebarItems.add(
                        app.store.all('tags')[i].data.attributes.name,
                        LinkButton.component(
                            {
                                icon: app.store.all('tags')[i].data.attributes.icon,
                                href: '/press/t/' + app.store.all('tags')[i].data.attributes.slug,
                                className: 'Button Button--primary tags_left',
                                itemClassName: 'App-primaryControl',
                            },
                            app.store.all('tags')[i].data.attributes.name
                        ),
                    );

                    if (app.store.all('tags')[i].data.relationships) {
                        if (app.store.all('tags')[i].data.relationships.children) {

                            for (let x = 0; x < app.store.all('tags')[i].data.relationships.children.data.length; x++) {

                                let id_tag_children = app.store.all('tags')[i].data.relationships.children.data[x].id;

                                for (let z = 0; z < app.store.all('tags').length; z++) {
                                    if (app.store.all('tags')[z].data.id == id_tag_children) {
                                        sidebarItems.add(
                                            app.store.all('tags')[z].data.attributes.name,
                                            LinkButton.component(
                                                {
                                                    icon: "",
                                                    href: '/press/t/' + app.store.all('tags')[z].data.attributes.slug,
                                                    className: 'Button Button--primary tags_left_child',
                                                    itemClassName: 'App-primaryControl',
                                                },
                                                app.store.all('tags')[z].data.attributes.name
                                            ),
                                        );
                                    }
                                }
                            }
                        }
                    } */







            if (id != -1) {
                /* console.log(i)
                console.log(app.store.all('tags')[i]) */
                /* if(app.store.all('tags')[id].data){

                } */








                /* switch (app.store.all('tags')[i++].data.attributes.name) {
                    case i++:
                        sidebarItems.add(
                            app.store.all('tags')[i++].data.attributes.name,
                            LinkButton.component(
                                {
                                    icon: app.store.all('tags')[i++].data.attributes.icon,
                                    href: 't/' + app.store.all('tags')[i++].data.attributes.slug,
                                    className: 'Button Button--primary tags_left',
                                    itemClassName: 'App-primaryControl',
                                },
                                app.store.all('tags')[i++].data.attributes.name
                            ),
                        );
                        break;
                    default:
                        break;
                } */
            }













        if (!items.has('An')) {
            items.add(
                'An',
                LinkButton.component(
                    {
                        href: '/t/' + 'an',
                        className: 'Button Button--primary tags_center',
                        itemClassName: 'App-primaryControl',
                    },
                    'An'
                )
            );
        }


         if (!items.has('Luna')) {
            items.add(
                'Luna',
                LinkButton.component(
                    {
                        href: '/t/' + 'luna',
                        className: 'Button Button--primary tags_center',
                        itemClassName: 'App-primaryControl',
                    },
                    'Luna'
                )
            );
        }


             if (!items.has('Zi')) {
            items.add(
                'Zi',
                LinkButton.component(
                    {
                        href: '/t/' + 'zi',
                        className: 'Button Button--primary tags_center',
                        itemClassName: 'App-primaryControl',
                    },
                    'Zi'
                )
            );
        }



        .IndexPage-nav .item-newDiscussion .Button {
    /* position: absolute;
    left: 0%;
    top: 0%; */
    height: 52px;
    width: 100%;
    border-radius: 0px;
    background: #585e83 !important;
    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);
  }

  .IndexPage-nav .item-newDiscussion .Button:hover {
    background: #686f99 !important;
  }